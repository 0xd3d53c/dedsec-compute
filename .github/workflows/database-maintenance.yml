name: Database Maintenance

on:
  schedule:
    # Run daily at 1 AM UTC (adjust timezone as needed)
    - cron: '0 1 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  maintenance:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check Environment Variables
        run: |
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
            echo "‚ùå SUPABASE_URL secret is not set"
            echo "Please add your Supabase project URL to repository secrets"
            exit 1
          fi
          
          if [ -z "${{ secrets.SUPABASE_ANON_KEY }}" ]; then
            echo "‚ùå SUPABASE_ANON_KEY secret is not set"
            echo "Please add your Supabase anonymous key to repository secrets"
            exit 1
          fi
          
          echo "‚úÖ Environment variables are configured"
          echo "Supabase URL: ${{ secrets.SUPABASE_URL }}"
          echo "API Key: ${SUPABASE_ANON_KEY:0:20}..." # Show first 20 chars only

      - name: Run Database Maintenance
        run: |
          echo "üîÑ Starting database maintenance..."
          
          # Update leaderboards and cleanup old data
          response=$(curl -s -w "\n%{http_code}" -X POST "${{ secrets.SUPABASE_URL }}/rest/v1/rpc/scheduled_maintenance" \
               -H "apikey: ${{ secrets.SUPABASE_ANON_KEY }}" \
               -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
               -H "Content-Type: application/json" \
               -H "Prefer: return=minimal")
          
          # Extract HTTP status code (last line)
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          
          if [ "$http_code" -eq 200 ] || [ "$http_code" -eq 201 ]; then
            echo "‚úÖ Database maintenance completed successfully"
            echo "Response: $response_body"
          else
            echo "‚ùå Database maintenance failed with HTTP $http_code"
            echo "Response: $response_body"
            exit 1
          fi
        
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

  # Optional: Add a job to check maintenance health
  health-check:
    runs-on: ubuntu-latest
    needs: maintenance
    if: always() # Run even if maintenance fails
    
    steps:
      - name: Check Maintenance Health
        run: |
          echo "üîç Checking maintenance health..."
          
          # Check if leaderboard cache was updated recently
          response=$(curl -s -w "\n%{http_code}" -X GET "${{ secrets.SUPABASE_URL }}/rest/v1/cron_job_health" \
               -H "apikey: ${{ secrets.SUPABASE_ANON_KEY }}" \
               -H "Authorization: Bearer ${{ secrets.SUPABASE_ANON_KEY }}" \
               -H "Accept: application/json")
          
          # Extract HTTP status code (last line)
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          
          if [ "$http_code" -eq 200 ]; then
            echo "‚úÖ Health check completed successfully"
            echo "Health data: $response_body"
          else
            echo "‚ö†Ô∏è Health check failed with HTTP $http_code"
            echo "Response: $response_body"
            # Don't fail the job, just warn
          fi
        
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
